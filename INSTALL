
Quickstart
----------

To build Duc with its default options, run:

    $ ./configure
    $ make
    $ sudo make install


To get the required dependencies on Debian or Ubuntu, run:

    $ sudo apt-get install libncursesw5-dev libcairo2-dev libpango1.0-dev \
      build-essential


On RHEL or CentOS systems, you need to do:

    $ sudo yum install pango-devel cairo-devel tokyocabinet-devel 


Duc comes with various user interfaces and a number of back ends for database
access and graph drawing. You can choose which options should be used with the
./configure script to build Duc to fit best in your environment.

This document describes the various options which can be passed to the
./configure script, and the impact these options have on Duc functionality.


User interfaces
---------------

Duc comes with the following user interfaces:

- Command line interface (duc ls): This user interface has no external
  dependencies and is always enabled

- Ncurses console interface (duc ui): an interactive console interface, which
  depends on ncurses or ncursesw. This user interface is enabled by default. If
  your system does not provide ncurses, you can disable this with

    --disable-ui

- X11 GUI (duc gui): This is the default interface for Linux and other Unix
  systems. This user interface depends on the cairo library (see below). If
  your system has no X11 or cairo available, disable this user interface with:

    --disable-x11

- OpenGL GUI (duc gui): an OpenGL/GLFW user interface which should be portable
  on a large range of operating systems. The OpenGL gui is disabled by default.
  If you want to enable OpenGL, run ./configure with:

    --enable-opengl --disable-x11


Database back end
----------------

Duc supports various key-value database back ends, at this time Tokyocabinet,
Leveldb and Sqlite3 are supported. Duc uses Tokyocabinet by default: the
performance is acceptable and generates in the smallest database size.

    --with-db-back end=ARG

If your system supports none of the above, contact the author to see if we can
add your favourite back end.


Graphics
--------

Duc supports various back ends for creating graphics, but some have dependencies
which can not be met on all systems. Especially on headless server systems or
embedded systems not all graphics libraries are available.

- SVG: Duc has native SVG support, which can be used by the 'duc graph' command
  to create static images of disk usage. The SVG back end has no external
  dependencies and is always enabled.

- HTML canvas: Duc has native support for generating graphs in HTML5 using
  JavaScript and the canvas object. The HTML back end has not external
  dependencies and is always enabled.

- Cairo/pango: The cairo/pango back end is required for the X11 user interface,
  and also adds an option to the duc-graph command to generate images in .PNG
  or .PDF file format. If your systems does not have cairo and pango available,
  add the following flag to ./configure:

    --disable-cairo

- OpenGL: Duc can draw to OpenGL contexts and can be used by the 'duc gui'
  command. To enable the OpenGL back end for the 'duc gui' command, run 
  ./configure with:

    --enable-opengl --disable-x11


